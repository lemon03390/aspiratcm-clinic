"use strict";(()=>{var e={};e.id=583,e.ids=[583],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9491:e=>{e.exports=require("assert")},6113:e=>{e.exports=require("crypto")},2361:e=>{e.exports=require("events")},7147:e=>{e.exports=require("fs")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},2037:e=>{e.exports=require("os")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},6224:e=>{e.exports=require("tty")},7310:e=>{e.exports=require("url")},3837:e=>{e.exports=require("util")},9796:e=>{e.exports=require("zlib")},2316:(e,t,s)=>{s.r(t),s.d(t,{headerHooks:()=>I,originalPathname:()=>A,patchFetch:()=>P,requestAsyncStorage:()=>m,routeModule:()=>g,serverHooks:()=>h,staticGenerationAsyncStorage:()=>f,staticGenerationBailout:()=>q});var o={};s.r(o),s.d(o,{DELETE:()=>d,GET:()=>p,PATCH:()=>c});var r=s(5419),a=s(9108),n=s(9678),i=s(3949),l=s(8070),u=s(5638);async function p(e,{params:t}){try{let s=t.id;console.log(`[患者API] 透過ID獲取患者資料: ID = ${s}`);let o=(0,u.l9)(`/patient_registration/${s}`);console.log("患者API代理請求到:",o),console.log("使用病患ID (patient_id):",s);let r={};e.headers.forEach((e,t)=>{"host"!==t&&(r[t]=e)}),r.Accept="application/json",console.log("請求頭:",r);let a=await i.Z.get(o,{headers:r,timeout:1e4});return console.log("後端回應狀態:",a.status),console.log("後端回應數據類型:",typeof a.data),l.Z.json(a.data,{status:a.status})}catch(e){if(console.error("患者API代理GET請求錯誤:",e.message),e.response)return console.error("錯誤狀態碼:",e.response.status),console.error("錯誤數據:",e.response.data),console.error("請求URL:",e.config?.url),l.Z.json({detail:e.response.data?.detail||"獲取患者資料失敗",message:e.message,patientId:t.id,debugInfo:{status:e.response.status,url:e.config?.url}},{status:e.response.status});if(e.request)return console.error("沒有收到響應，請求發送失敗"),l.Z.json({detail:"無法連接到後端服務",message:e.message,patientId:t.id,debugInfo:{isConnectionError:!0,url:e.config?.url}},{status:503});return l.Z.json({detail:"獲取患者資料失敗",message:e.message,patientId:t.id},{status:500})}}async function c(e,{params:t}){try{let s=t.id,o=await e.json(),r=(0,u.l9)(`/patient_registration/${s}`);console.log("患者API代理PATCH請求到:",r),console.log("請求資料:",JSON.stringify(o,null,2));let a={};e.headers.forEach((e,t)=>{"host"!==t&&(a[t]=e)}),a["Content-Type"]="application/json",console.log("請求頭:",a);let n=await i.Z.patch(r,o,{headers:a,timeout:1e4});return console.log("後端回應狀態:",n.status),console.log("後端回應數據:",n.data),l.Z.json(n.data,{status:n.status})}catch(e){if(console.error("患者API代理PATCH請求錯誤:",e.message),e.response)return console.error("錯誤狀態碼:",e.response.status),console.error("錯誤數據:",e.response.data),l.Z.json({detail:e.response.data?.detail||"更新患者資料失敗",message:e.message,patientId:t.id,debugInfo:{status:e.response.status,url:e.config?.url,method:e.config?.method}},{status:e.response.status});if(e.request)return console.error("未收到回應的請求:",e.request),l.Z.json({detail:"無法連接到後端服務器",message:e.message,patientId:t.id,debugInfo:{isConnectionError:!0,url:e.config?.url,method:e.config?.method}},{status:503});return console.error("其他錯誤:",e.message),l.Z.json({detail:"更新患者資料失敗",message:e.message,patientId:t.id},{status:500})}}async function d(e,{params:t}){try{let s=t.id,o=(0,u.l9)(`/patient_registration/${s}`);console.log("患者API代理DELETE請求到:",o);let r={};e.headers.forEach((e,t)=>{"host"!==t&&(r[t]=e)}),console.log("請求頭:",r);let a=await i.Z.delete(o,{headers:r,timeout:1e4});return console.log("後端回應狀態:",a.status),console.log("後端回應數據:",a.data),l.Z.json(a.data,{status:a.status})}catch(e){if(console.error("患者API代理DELETE請求錯誤:",e.message),e.response)return console.error("錯誤狀態碼:",e.response.status),console.error("錯誤數據:",e.response.data),l.Z.json({detail:e.response.data?.detail||"刪除患者資料失敗",message:e.message,patientId:t.id,debugInfo:{status:e.response.status,url:e.config?.url,method:e.config?.method}},{status:e.response.status});if(e.request)return console.error("未收到回應的請求:",e.request),l.Z.json({detail:"無法連接到後端服務器",message:e.message,patientId:t.id,debugInfo:{isConnectionError:!0,url:e.config?.url,method:e.config?.method}},{status:503});return console.error("其他錯誤:",e.message),l.Z.json({detail:"刪除患者資料失敗",message:e.message,patientId:t.id},{status:500})}}let g=new r.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/v1/patients/[id]/route",pathname:"/api/v1/patients/[id]",filename:"route",bundlePath:"app/api/v1/patients/[id]/route"},resolvedPagePath:"/Users/mountainfung/Desktop/AWS-Aspiratcm_local/frontend/src/app/api/v1/patients/[id]/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:m,staticGenerationAsyncStorage:f,serverHooks:h,headerHooks:I,staticGenerationBailout:q}=g,A="/api/v1/patients/[id]/route";function P(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:f})}},5638:(e,t,s)=>{s.d(t,{l9:()=>r});var o=s(3949);let r=(e="")=>{let t=e.startsWith("/")?e:`/${e}`;return`https://clinic.aspiratcm.com/api/v1${t}`},a=o.Z.create({baseURL:r(),headers:{"Content-Type":"application/json",Accept:"application/json"},timeout:15e3});a.interceptors.request.use(e=>{if(console.log(`[API請求] ${e.method?.toUpperCase()} ${e.url}`),e.params&&console.log(`[請求參數] ${JSON.stringify(e.params)}`),e.data&&"string"!=typeof e.data)try{console.log(`[請求數據] ${JSON.stringify(e.data)}`)}catch{console.log("[請求數據] 無法序列化")}return e},e=>(console.error("[API請求錯誤]",e),Promise.reject(e))),a.interceptors.response.use(e=>(console.log(`[API響應] ${e.status} ${e.config.url}`),e),e=>{let t=e?.response?.status,s=e?.config?.url,o=e?.config?.method?.toUpperCase();return t?console.error(`[${o} ${s}] 錯誤 ${t}`,e.response.data):console.error("[API錯誤]",e.message),Promise.reject(e)})}};var t=require("../../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),o=t.X(0,[638,823],()=>s(2316));module.exports=o})();