"use strict";(()=>{var e={};e.id=141,e.ids=[141],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9491:e=>{e.exports=require("assert")},6113:e=>{e.exports=require("crypto")},2361:e=>{e.exports=require("events")},7147:e=>{e.exports=require("fs")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},2037:e=>{e.exports=require("os")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},6224:e=>{e.exports=require("tty")},7310:e=>{e.exports=require("url")},3837:e=>{e.exports=require("util")},9796:e=>{e.exports=require("zlib")},8793:(e,t,s)=>{s.r(t),s.d(t,{headerHooks:()=>f,originalPathname:()=>q,patchFetch:()=>x,requestAsyncStorage:()=>d,routeModule:()=>g,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>w});var r={};s.r(r),s.d(r,{DELETE:()=>c,GET:()=>u});var o=s(5419),a=s(9108),i=s(9678),n=s(3949),l=s(8070),p=s(5638);async function u(e){try{console.log("正在獲取候診清單數據");let t=(0,p.l9)("/patient_registration/waiting-list");console.log("候診清單請求到:",t);let s={};e.headers.forEach((e,t)=>{"host"!==t&&(s[t]=e)}),s.Accept="application/json",console.log("請求頭:",s);let r=await n.Z.get(t,{headers:s,timeout:1e4});console.log("後端回應狀態:",r.status);let o=r.data;Array.isArray(o)||(console.warn("後端返回的候診清單非陣列格式:",o),o=[]);let a=o.map(e=>{if(!e.waiting_since_timestamp){if(e.created_at)e.waiting_since_timestamp=e.created_at;else{let t=e.waitingSince?.match(/(\d+):(\d+)/);if(t){let s=parseInt(t[1]),r=parseInt(t[2]),o=new Date,a=new Date;a.setHours(s,r,0,0),a>o&&a.setDate(a.getDate()-1),e.waiting_since_timestamp=a.toISOString()}else{let t=new Date;t.setMinutes(t.getMinutes()-30),e.waiting_since_timestamp=t.toISOString()}}}return e});return console.log("處理後的候診清單數據:",a),l.Z.json(a,{status:r.status})}catch(e){if(console.error("獲取候診清單失敗:",e.message),e.response)return console.error("錯誤狀態碼:",e.response.status),console.error("錯誤數據:",e.response.data),l.Z.json({detail:e.response.data?.detail||"請求處理失敗",message:e.message},{status:e.response.status});if(!e.request)return l.Z.json({detail:"請求處理失敗",message:e.message},{status:500});return console.error("沒有收到響應，請求發送失敗"),l.Z.json({detail:"無法連接到後端服務",message:e.message},{status:503})}}async function c(e){try{let{searchParams:t}=new URL(e.url),s=t.get("patientId");if(!s)return l.Z.json({detail:"缺少必要的 patientId 參數"},{status:400});let r=(0,p.l9)(`/patient_registration/waiting-list/${s}`);console.log("從候診清單移除患者請求到:",r);let o={};e.headers.forEach((e,t)=>{"host"!==t&&(o[t]=e)}),o.Accept="application/json",console.log("請求頭:",o);let a=await n.Z.delete(r,{headers:o,timeout:1e4});return console.log("後端回應狀態:",a.status),console.log("後端回應數據:",a.data),l.Z.json(a.data,{status:a.status})}catch(e){if(console.error("從候診清單移除患者失敗:",e.message),e.response)return console.error("錯誤狀態碼:",e.response.status),console.error("錯誤數據:",e.response.data),l.Z.json({detail:e.response.data?.detail||"移除患者失敗",message:e.message},{status:e.response.status});if(e.request)return console.error("沒有收到響應，請求發送失敗"),l.Z.json({detail:"無法連接到後端服務",message:e.message},{status:503});return l.Z.json({detail:"請求處理失敗",message:e.message},{status:500})}}let g=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/v1/patient_registration/waiting-list/route",pathname:"/api/v1/patient_registration/waiting-list",filename:"route",bundlePath:"app/api/v1/patient_registration/waiting-list/route"},resolvedPagePath:"/Users/mountainfung/Desktop/AWS-Aspiratcm_local/frontend/src/app/api/v1/patient_registration/waiting-list/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:m,serverHooks:h,headerHooks:f,staticGenerationBailout:w}=g,q="/api/v1/patient_registration/waiting-list/route";function x(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},5638:(e,t,s)=>{s.d(t,{l9:()=>o});var r=s(3949);let o=(e="")=>{let t=e.startsWith("/")?e:`/${e}`;return`https://clinic.aspiratcm.com/api/v1${t}`},a=r.Z.create({baseURL:o(),headers:{"Content-Type":"application/json",Accept:"application/json"},timeout:15e3});a.interceptors.request.use(e=>{if(console.log(`[API請求] ${e.method?.toUpperCase()} ${e.url}`),e.params&&console.log(`[請求參數] ${JSON.stringify(e.params)}`),e.data&&"string"!=typeof e.data)try{console.log(`[請求數據] ${JSON.stringify(e.data)}`)}catch{console.log("[請求數據] 無法序列化")}return e},e=>(console.error("[API請求錯誤]",e),Promise.reject(e))),a.interceptors.response.use(e=>(console.log(`[API響應] ${e.status} ${e.config.url}`),e),e=>{let t=e?.response?.status,s=e?.config?.url,r=e?.config?.method?.toUpperCase();return t?console.error(`[${r} ${s}] 錯誤 ${t}`,e.response.data):console.error("[API錯誤]",e.message),Promise.reject(e)})}};var t=require("../../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[638,823],()=>s(8793));module.exports=r})();