"use strict";(()=>{var e={};e.id=128,e.ids=[128],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},57147:e=>{e.exports=require("fs")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},22037:e=>{e.exports=require("os")},71017:e=>{e.exports=require("path")},12781:e=>{e.exports=require("stream")},76224:e=>{e.exports=require("tty")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},43024:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>P,originalPathname:()=>x,patchFetch:()=>q,requestAsyncStorage:()=>d,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>f});var s={};r.r(s),r.d(s,{GET:()=>c,POST:()=>l});var o=r(95419),a=r(69108),n=r(99678),i=r(78070),u=r(83949),p=r(85638);async function c(e){try{let{searchParams:t}=new URL(e.url),r=t.get("endpoint");(0,p.l9)();let s={NODE_ENV:"production",NEXT_PUBLIC_API_BASE_URL:"https://clinic.aspiratcm.com/api/v1",currentUrl:e.url,requestInfo:{url:e.url,method:e.method,headers:Object.fromEntries(e.headers.entries())}};if("backend"===r)try{let e=await u.Z.get((0,p.l9)("/docs/"),{timeout:5e3});return i.Z.json({status:"success",message:"成功連接到後端API",backendStatus:e.status,config:s})}catch(e){return i.Z.json({status:"error",message:"無法連接到後端API",error:e.message,errorDetail:e.response?.data||"無詳細錯誤信息",config:s},{status:500})}return i.Z.json({status:"success",message:"前端API路由正常工作",timestamp:new Date().toISOString(),config:s})}catch(e){return i.Z.json({status:"error",message:"測試API端點發生錯誤",error:e.message},{status:500})}}async function l(e){try{let t=await e.json();return i.Z.json({status:"success",message:"POST測試成功",receivedData:t,timestamp:new Date().toISOString()})}catch(e){return i.Z.json({status:"error",message:"POST測試失敗",error:e.message},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/v1/test/route",pathname:"/api/v1/test",filename:"route",bundlePath:"app/api/v1/test/route"},resolvedPagePath:"/Users/mountainfung/Desktop/AWS-Aspiratcm_local/frontend/src/app/api/v1/test/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:g,serverHooks:h,headerHooks:P,staticGenerationBailout:f}=m,x="/api/v1/test/route";function q(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}},85638:(e,t,r)=>{r.d(t,{l9:()=>o});var s=r(83949);let o=(e="")=>{let t=e.startsWith("/")?e:`/${e}`;return`https://clinic.aspiratcm.com/api/v1${t}`},a=s.Z.create({baseURL:o(),headers:{"Content-Type":"application/json",Accept:"application/json"},timeout:15e3});a.interceptors.request.use(e=>{if(console.log(`[API請求] ${e.method?.toUpperCase()} ${e.url}`),e.params&&console.log(`[請求參數] ${JSON.stringify(e.params)}`),e.data&&"string"!=typeof e.data)try{console.log(`[請求數據] ${JSON.stringify(e.data)}`)}catch{console.log("[請求數據] 無法序列化")}return e},e=>(console.error("[API請求錯誤]",e),Promise.reject(e))),a.interceptors.response.use(e=>(console.log(`[API響應] ${e.status} ${e.config.url}`),e),e=>{let t=e?.response?.status,r=e?.config?.url,s=e?.config?.method?.toUpperCase();return t?console.error(`[${s} ${r}] 錯誤 ${t}`,e.response.data):console.error("[API錯誤]",e.message),Promise.reject(e)})}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[1638,6206,3949],()=>r(43024));module.exports=s})();