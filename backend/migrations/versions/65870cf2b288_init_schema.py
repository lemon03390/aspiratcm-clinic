"""init schema

Revision ID: 65870cf2b288
Revises: 
Create Date: 2025-03-31 16:33:45.551303

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '65870cf2b288'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('schedule', sa.ARRAY(sa.String()), server_default='{}', nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doctors_email'), 'doctors', ['email'], unique=False)
    op.create_index(op.f('ix_doctors_id'), 'doctors', ['id'], unique=False)
    op.create_index(op.f('ix_doctors_name'), 'doctors', ['name'], unique=True)
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('appointment_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('next_appointment', sa.DateTime(), nullable=True),
    sa.Column('related_appointment_id', sa.Integer(), nullable=True),
    sa.Column('consultation_type', sa.JSON(), nullable=True),
    sa.Column('is_first_time', sa.Integer(), nullable=True),
    sa.Column('is_troublesome', sa.Integer(), nullable=True),
    sa.Column('is_contagious', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['related_appointment_id'], ['appointments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_id'), 'appointments', ['id'], unique=False)
    op.create_index(op.f('ix_appointments_patient_name'), 'appointments', ['patient_name'], unique=False)
    # ### end Alembic commands ###


def drop_index_and_table(table_name, index_names):
    for index_name in index_names:
        op.drop_index(op.f(f'ix_{table_name}_{index_name}'), table_name=table_name)
    op.drop_table(table_name)

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    drop_index_and_table('appointments', ['patient_name', 'id'])
    drop_index_and_table('doctors', ['name', 'id', 'email'])
    # ### end Alembic commands ###
