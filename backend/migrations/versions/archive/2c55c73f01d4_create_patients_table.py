"""create patients table

Revision ID: 2c55c73f01d4
Revises: 6bc7f775e440
Create Date: 2025-04-05 21:18:40.411158

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2c55c73f01d4'
down_revision: Union[str, None] = '6bc7f775e440'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_appointments_id', table_name='appointments')
    op.drop_index('ix_appointments_patient_name', table_name='appointments')
    op.drop_table('appointments')
    op.drop_index('ix_doctors_email', table_name='doctors')
    op.drop_index('ix_doctors_id', table_name='doctors')
    op.drop_index('ix_doctors_name', table_name='doctors')
    op.drop_table('doctors')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('doctors',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('doctors_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('schedule', postgresql.ARRAY(sa.VARCHAR()), server_default=sa.text("'{}'::character varying[]"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='doctors_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_doctors_name', 'doctors', ['name'], unique=True)
    op.create_index('ix_doctors_id', 'doctors', ['id'], unique=False)
    op.create_index('ix_doctors_email', 'doctors', ['email'], unique=False)
    op.create_table('appointments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('patient_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('doctor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('appointment_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('next_appointment', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('related_appointment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('consultation_type', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_first_time', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_troublesome', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_contagious', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], name='appointments_doctor_id_fkey'),
    sa.ForeignKeyConstraint(['related_appointment_id'], ['appointments.id'], name='appointments_related_appointment_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='appointments_pkey')
    )
    op.create_index('ix_appointments_patient_name', 'appointments', ['patient_name'], unique=False)
    op.create_index('ix_appointments_id', 'appointments', ['id'], unique=False)
    # ### end Alembic commands ###
