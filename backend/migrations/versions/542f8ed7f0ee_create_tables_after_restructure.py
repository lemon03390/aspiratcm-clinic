"""create tables after restructure

Revision ID: 542f8ed7f0ee
Revises: b6948f42acc8
Create Date: 2025-04-05 22:06:52.682178

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '542f8ed7f0ee'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('doctors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('schedule', sa.ARRAY(sa.String()), server_default='{}', nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_doctors_email'), 'doctors', ['email'], unique=False)
    op.create_index(op.f('ix_doctors_id'), 'doctors', ['id'], unique=False)
    op.create_index(op.f('ix_doctors_name'), 'doctors', ['name'], unique=True)
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('appointment_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('next_appointment', sa.DateTime(), nullable=True),
    sa.Column('related_appointment_id', sa.Integer(), nullable=True),
    sa.Column('consultation_type', sa.JSON(), nullable=True),
    sa.Column('is_first_time', sa.Integer(), nullable=True),
    sa.Column('is_troublesome', sa.Integer(), nullable=True),
    sa.Column('is_contagious', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['related_appointment_id'], ['appointments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_id'), 'appointments', ['id'], unique=False)
    op.create_index(op.f('ix_appointments_patient_name'), 'appointments', ['patient_name'], unique=False)
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('registration_number', sa.String(), nullable=True),
    sa.Column('chinese_name', sa.String(), nullable=True),
    sa.Column('english_name', sa.String(), nullable=True),
    sa.Column('id_number', sa.String(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('basic_diseases', sa.JSON(), nullable=True),
    sa.Column('drug_allergies', sa.JSON(), nullable=True),
    sa.Column('food_allergies', sa.JSON(), nullable=True),
    sa.Column('registration_datetime', sa.DateTime(), nullable=True),
    sa.Column('has_appointment', sa.Boolean(), nullable=True),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.Column('data_source', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.Column('sub_district', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patients_chinese_name'), 'patients', ['chinese_name'], unique=False)
    op.create_index(op.f('ix_patients_english_name'), 'patients', ['english_name'], unique=False)
    op.create_index(op.f('ix_patients_id'), 'patients', ['id'], unique=False)
    op.create_index(op.f('ix_patients_id_number'), 'patients', ['id_number'], unique=True)
    op.create_index(op.f('ix_patients_registration_number'), 'patients', ['registration_number'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_patients_registration_number'), table_name='patients')
    op.drop_index(op.f('ix_patients_id_number'), table_name='patients')
    op.drop_index(op.f('ix_patients_id'), table_name='patients')
    op.drop_index(op.f('ix_patients_english_name'), table_name='patients')
    op.drop_index(op.f('ix_patients_chinese_name'), table_name='patients')
    op.drop_table('patients')
    op.drop_index(op.f('ix_appointments_patient_name'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_id'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_doctors_name'), table_name='doctors')
    op.drop_index(op.f('ix_doctors_id'), table_name='doctors')
    op.drop_index(op.f('ix_doctors_email'), table_name='doctors')
    op.drop_table('doctors')
    # ### end Alembic commands ###
