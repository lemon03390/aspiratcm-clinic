"""TryingToUpgradeToPatientRecordVersion

Revision ID: 94ddcc775540
Revises: 16d3a06d42cd
Create Date: 2025-04-10 00:23:18.999458

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '94ddcc775540'
down_revision: Union[str, None] = '16d3a06d42cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reference_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data_type', sa.String(length=50), nullable=False),
    sa.Column('data_key', sa.String(length=100), nullable=False),
    sa.Column('data_value', sa.String(length=200), nullable=False),
    sa.Column('data_description', sa.Text(), nullable=True),
    sa.Column('data_extra', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    comment='儲存各種參考資料，包含中藥名、穴位、脈象等'
    )
    op.create_index(op.f('ix_reference_data_data_key'), 'reference_data', ['data_key'], unique=False)
    op.create_index(op.f('ix_reference_data_data_type'), 'reference_data', ['data_type'], unique=False)
    op.create_index(op.f('ix_reference_data_id'), 'reference_data', ['id'], unique=False)
    op.create_table('medical_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('record_id', sa.String(length=50), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('appointment_id', sa.Integer(), nullable=True),
    sa.Column('visit_date', sa.DateTime(), nullable=False),
    sa.Column('is_first_visit', sa.Boolean(), nullable=True),
    sa.Column('chief_complaint', sa.Text(), nullable=True),
    sa.Column('present_illness', sa.Text(), nullable=True),
    sa.Column('observation', sa.Text(), nullable=True),
    sa.Column('left_pulse', sa.String(length=100), nullable=True),
    sa.Column('right_pulse', sa.String(length=100), nullable=True),
    sa.Column('tongue_quality', sa.String(length=50), nullable=True),
    sa.Column('tongue_shape', sa.String(length=50), nullable=True),
    sa.Column('tongue_color', sa.String(length=50), nullable=True),
    sa.Column('tongue_coating', sa.String(length=50), nullable=True),
    sa.Column('menstruation_start', sa.DateTime(), nullable=True),
    sa.Column('menstruation_end', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medical_records_id'), 'medical_records', ['id'], unique=False)
    op.create_index(op.f('ix_medical_records_record_id'), 'medical_records', ['record_id'], unique=True)
    op.create_table('diagnoses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('medical_record_id', sa.Integer(), nullable=False),
    sa.Column('modern_diseases', sa.ARRAY(sa.String(length=100)), nullable=True),
    sa.Column('cm_syndromes', sa.ARRAY(sa.String(length=100)), nullable=True),
    sa.Column('cm_principle', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['medical_record_id'], ['medical_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diagnoses_id'), 'diagnoses', ['id'], unique=False)
    op.create_table('prescriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('medical_record_id', sa.Integer(), nullable=False),
    sa.Column('prescription_id', sa.String(length=50), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['medical_record_id'], ['medical_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_prescriptions_id'), 'prescriptions', ['id'], unique=False)
    op.create_index(op.f('ix_prescriptions_prescription_id'), 'prescriptions', ['prescription_id'], unique=True)
    op.create_table('treatments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('medical_record_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['medical_record_id'], ['medical_records.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_treatments_id'), 'treatments', ['id'], unique=False)
    op.create_table('herb_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prescription_id', sa.Integer(), nullable=False),
    sa.Column('herb_name', sa.String(length=100), nullable=False),
    sa.Column('amount', sa.String(length=50), nullable=False),
    sa.Column('unit', sa.String(length=10), nullable=True),
    sa.Column('sequence', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['prescription_id'], ['prescriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_herb_items_id'), 'herb_items', ['id'], unique=False)
    op.create_table('treatment_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('treatment_id', sa.Integer(), nullable=False),
    sa.Column('method', sa.String(length=50), nullable=False),
    sa.Column('target', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('sequence', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['treatment_id'], ['treatments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_treatment_items_id'), 'treatment_items', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_treatment_items_id'), table_name='treatment_items')
    op.drop_table('treatment_items')
    op.drop_index(op.f('ix_herb_items_id'), table_name='herb_items')
    op.drop_table('herb_items')
    op.drop_index(op.f('ix_treatments_id'), table_name='treatments')
    op.drop_table('treatments')
    op.drop_index(op.f('ix_prescriptions_prescription_id'), table_name='prescriptions')
    op.drop_index(op.f('ix_prescriptions_id'), table_name='prescriptions')
    op.drop_table('prescriptions')
    op.drop_index(op.f('ix_diagnoses_id'), table_name='diagnoses')
    op.drop_table('diagnoses')
    op.drop_index(op.f('ix_medical_records_record_id'), table_name='medical_records')
    op.drop_index(op.f('ix_medical_records_id'), table_name='medical_records')
    op.drop_table('medical_records')
    op.drop_index(op.f('ix_reference_data_id'), table_name='reference_data')
    op.drop_index(op.f('ix_reference_data_data_type'), table_name='reference_data')
    op.drop_index(op.f('ix_reference_data_data_key'), table_name='reference_data')
    op.drop_table('reference_data')
    # ### end Alembic commands ###
